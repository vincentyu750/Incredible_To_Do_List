{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ToDoList from \"./components/ToDoList\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction App() {\n  var _useState = useState(['Do laundry', 'Go to gym', 'Walk dog']),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var addTask = function addTask(taskText) {\n    setTasks([].concat(_toConsumableArray(tasks), [taskText]));\n  };\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"ToDoList\",\n        children: function children(props) {\n          return _jsx(ToDoList, _objectSpread(_objectSpread({}, props), {}, {\n            tasks: tasks\n          }));\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"ToDoForm\",\n        children: function children(props) {\n          return _jsx(ToDoForm, _objectSpread(_objectSpread({}, props), {}, {\n            addTask: addTask\n          }));\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderWidth: 1,\n    paddingTop: 50\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","SafeAreaView","StyleSheet","ToDoList","ToDoForm","NavigationContainer","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","tasks","setTasks","addTask","taskText","concat","_toConsumableArray","children","Navigator","Screen","name","props","_objectSpread","styles","create","container","flex","borderWidth","paddingTop"],"sources":["C:/MOBILE2023/incredible_to_do_list/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { SafeAreaView, StyleSheet } from 'react-native';\nimport ToDoList from './components/ToDoList';\nimport ToDoForm from './components/ToDoForm';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst Stack = createStackNavigator();\n\nfunction App() {\n  // Initialize the tasks state with your initial list of tasks\n  const [tasks, setTasks] = useState([\n    'Do laundry',\n    'Go to gym',\n    'Walk dog',\n  ]);\n\n  // Function to add new tasks\n  const addTask = (taskText) => {\n    setTasks([...tasks, taskText]);\n  };\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"ToDoList\">\n          {(props) => <ToDoList {...props} tasks={tasks} />}\n        </Stack.Screen>\n        <Stack.Screen name=\"ToDoForm\">\n          {(props) => <ToDoForm {...props} addTask={addTask} />}\n        </Stack.Screen>\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderWidth: 1,  // Add a border to the entire app\n    paddingTop: 50,   // Add 50px padding from the top\n  },\n});\n\nexport default App;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,QAAQ;AACf,OAAOC,QAAQ;AACf,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/D,IAAMC,KAAK,GAAGL,oBAAoB,CAAC,CAAC;AAEpC,SAASM,GAAGA,CAAA,EAAG;EAEb,IAAAC,SAAA,GAA0Bb,QAAQ,CAAC,CACjC,YAAY,EACZ,WAAW,EACX,UAAU,CACX,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAJKG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAOtB,IAAMI,OAAO,GAAG,SAAVA,OAAOA,CAAIC,QAAQ,EAAK;IAC5BF,QAAQ,IAAAG,MAAA,CAAAC,kBAAA,CAAKL,KAAK,IAAEG,QAAQ,EAAC,CAAC;EAChC,CAAC;EAED,OACEX,IAAA,CAACH,mBAAmB;IAAAiB,QAAA,EAClBZ,KAAA,CAACC,KAAK,CAACY,SAAS;MAAAD,QAAA,GACdd,IAAA,CAACG,KAAK,CAACa,MAAM;QAACC,IAAI,EAAC,UAAU;QAAAH,QAAA,EAC1B,SAAAA,SAACI,KAAK;UAAA,OAAKlB,IAAA,CAACL,QAAQ,EAAAwB,aAAA,CAAAA,aAAA,KAAKD,KAAK;YAAEV,KAAK,EAAEA;UAAM,EAAE,CAAC;QAAA;MAAA,CACrC,CAAC,EACfR,IAAA,CAACG,KAAK,CAACa,MAAM;QAACC,IAAI,EAAC,UAAU;QAAAH,QAAA,EAC1B,SAAAA,SAACI,KAAK;UAAA,OAAKlB,IAAA,CAACJ,QAAQ,EAAAuB,aAAA,CAAAA,aAAA,KAAKD,KAAK;YAAER,OAAO,EAAEA;UAAQ,EAAE,CAAC;QAAA;MAAA,CACzC,CAAC;IAAA,CACA;EAAC,CACC,CAAC;AAE1B;AAEA,IAAMU,MAAM,GAAG1B,UAAU,CAAC2B,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAerB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}